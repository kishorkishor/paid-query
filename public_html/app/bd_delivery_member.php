<?php
// /app/bd_delivery_member.php ‚Äî BD Inbound Member: verify OTP and deliver cartons

require_once __DIR__ . '/auth.php';
require_login();
require_perm('bd_inbound_access'); // member access

error_reporting(E_ALL);
ini_set('display_errors','0');
ini_set('log_errors','1');
ini_set('error_log', __DIR__ . '/_php_errors.log');

require_once __DIR__ . '/config.php'; // db()
$pdo = db();

function e($v){ return htmlspecialchars((string)$v, ENT_QUOTES, 'UTF-8'); }

$msg = '';
$ok  = false;

// POST: verify OTP and mark delivered
if ($_SERVER['REQUEST_METHOD']==='POST' && ($_POST['action'] ?? '') === 'verify') {
  $cartonId = (int)($_POST['carton_id'] ?? 0);
  $otp      = trim((string)($_POST['otp'] ?? ''));
  
  if ($cartonId > 0 && preg_match('/^\d{6}$/', $otp)) {
    try {
      $pdo->beginTransaction();

      // Load carton ready for delivery
      $st = $pdo->prepare("
        SELECT c.id, c.otp_code, c.bd_delivery_status, c.delivery_status,
               pl.order_id, o.code AS order_code, pl.shipping_mark AS packing_code
          FROM inbound_cartons c
          JOIN inbound_packing_lists pl ON pl.id=c.packing_list_id
          JOIN orders o ON o.id=pl.order_id
         WHERE c.id=? LIMIT 1
      ");
      $st->execute([$cartonId]);
      $c = $st->fetch(PDO::FETCH_ASSOC);
      
      if (!$c) {
        throw new RuntimeException('Carton not found.');
      }

      if (($c['bd_delivery_status'] ?? '') !== 'ready for delivery') {
        throw new RuntimeException('Carton is not ready for delivery. Current status: ' . ($c['bd_delivery_status'] ?? 'unknown'));
      }
      
      if (empty($c['otp_code'])) {
        throw new RuntimeException('No delivery code generated by customer yet.');
      }
      
      if (!hash_equals($c['otp_code'], $otp)) {
        throw new RuntimeException('Invalid code. Please check and try again.');
      }

      // All good ‚Üí mark delivered
      $u = $pdo->prepare("
        UPDATE inbound_cartons
           SET bd_delivery_status='delivered',
               delivery_status='delivered',
               otp_verified_at=NOW(),
               bd_delivered_at=NOW()
         WHERE id=?
      ");
      $u->execute([(int)$c['id']]);

      // Optional: add a small message trail
      $pdo->prepare("INSERT INTO messages (query_id, direction, medium, body, created_at)
                     SELECT o.query_id, 'internal','note',
                            CONCAT('BD member delivered carton #', ? , ' using OTP.'), NOW()
                       FROM orders o WHERE o.id=?")
          ->execute([(int)$c['id'], (int)$c['order_id']]);

      $pdo->commit();
      $ok = true;
      $msg = 'Delivery confirmed successfully! Carton #' . $c['id'] . ' (' . ($c['packing_code'] ?? '') . ') has been marked as delivered.';
      
    } catch (Throwable $e) {
      $pdo->rollBack();
      $msg = $e->getMessage();
    }
  } else {
    $msg = 'Please enter a valid carton ID and complete 6-digit code.';
  }
}

// List: show a compact queue of cartons that are ready for delivery (no OTP verified yet)
$ready = $pdo->query("
  SELECT c.id, c.otp_generated_at, c.bd_total_price, c.total_due,
         pl.order_id, pl.shipping_mark AS packing_code, o.code AS order_code
    FROM inbound_cartons c
    JOIN inbound_packing_lists pl ON pl.id=c.packing_list_id
    JOIN orders o ON o.id=pl.order_id
   WHERE c.bd_delivery_status='ready for delivery'
     AND c.otp_verified_at IS NULL
   ORDER BY c.otp_generated_at DESC, c.id DESC
   LIMIT 100
")->fetchAll(PDO::FETCH_ASSOC);

// Count statistics
$stats = $pdo->query("
  SELECT 
    COUNT(CASE WHEN bd_delivery_status='ready for delivery' AND otp_verified_at IS NULL THEN 1 END) as ready_count,
    COUNT(CASE WHEN bd_delivery_status='delivered' AND DATE(bd_delivered_at) = CURDATE() THEN 1 END) as delivered_today
  FROM inbound_cartons
")->fetch(PDO::FETCH_ASSOC);

?>
<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>BD Inbound ‚Ä¢ Delivery Verification</title>
<meta name="viewport" content="width=device-width,initial-scale=1">
<style>
  :root{
    --ink:#0f172a;
    --muted:#64748b;
    --line:#e5e7eb;
    --ok:#10b981;
    --no:#ef4444;
    --warn:#f59e0b;
    --bg:#f8fafc;
    --primary:#3b82f6;
  }
  *{box-sizing:border-box;margin:0;padding:0}
  body{
    font-family:system-ui,-apple-system,Segoe UI,Arial,sans-serif;
    background:var(--bg);
    color:var(--ink);
    line-height:1.6;
  }
  header{
    padding:16px 24px;
    background:#0f172a;
    color:#fff;
    display:flex;
    justify-content:space-between;
    align-items:center;
    box-shadow:0 2px 8px rgba(0,0,0,0.1);
  }
  header h1{font-size:1.25rem;font-weight:700}
  header nav a{color:#fff;text-decoration:none;padding:8px 16px;border-radius:8px;transition:background 0.2s}
  header nav a:hover{background:rgba(255,255,255,0.1)}
  .wrap{max-width:1200px;margin:32px auto;padding:0 20px}
  .stats-grid{
    display:grid;
    grid-template-columns:repeat(auto-fit,minmax(200px,1fr));
    gap:16px;
    margin-bottom:24px;
  }
  .stat-card{
    background:#fff;
    border:1px solid var(--line);
    border-radius:12px;
    padding:20px;
    text-align:center;
  }
  .stat-number{
    font-size:2.5rem;
    font-weight:700;
    color:var(--primary);
    line-height:1;
  }
  .stat-label{
    color:var(--muted);
    font-size:0.875rem;
    margin-top:8px;
    font-weight:500;
  }
  .card{
    background:#fff;
    border:1px solid var(--line);
    border-radius:16px;
    padding:24px;
    margin-bottom:20px;
    box-shadow:0 1px 3px rgba(0,0,0,0.05);
  }
  .card h2{
    font-size:1.5rem;
    margin-bottom:16px;
    color:var(--ink);
  }
  .muted{color:var(--muted);font-size:0.875rem}
  .btn{
    border:0;
    border-radius:10px;
    padding:12px 20px;
    cursor:pointer;
    font-weight:600;
    font-size:0.95rem;
    transition:all 0.2s;
    display:inline-flex;
    align-items:center;
    gap:8px;
  }
  .btn:hover{transform:translateY(-1px);box-shadow:0 4px 12px rgba(0,0,0,0.15)}
  .btn:active{transform:translateY(0)}
  .btn:disabled{opacity:0.5;cursor:not-allowed;transform:none}
  .btn-primary{background:var(--primary);color:#fff}
  .btn-success{background:var(--ok);color:#fff}
  .btn-danger{background:var(--no);color:#fff}
  input[type="number"],input[type="text"]{
    padding:12px 16px;
    border:2px solid var(--line);
    border-radius:10px;
    width:100%;
    font-size:1rem;
    transition:border-color 0.2s;
  }
  input[type="number"]:focus,input[type="text"]:focus{
    outline:none;
    border-color:var(--primary);
  }
  .form-grid{
    display:grid;
    grid-template-columns:1fr 1fr;
    gap:16px;
    margin-bottom:20px;
  }
  .form-group label{
    display:block;
    margin-bottom:6px;
    font-weight:600;
    color:var(--ink);
    font-size:0.875rem;
  }
  table{width:100%;border-collapse:separate;border-spacing:0}
  th{
    padding:12px;
    border-bottom:2px solid var(--line);
    text-align:left;
    font-weight:600;
    color:var(--ink);
    font-size:0.875rem;
    text-transform:uppercase;
    letter-spacing:0.5px;
  }
  td{
    padding:16px 12px;
    border-bottom:1px solid #f3f4f6;
    vertical-align:middle;
  }
  tr:hover td{background:#fafbfc}
  .mono{font-family:ui-monospace,Menlo,Consolas,monospace}
  .badge{
    display:inline-block;
    padding:4px 12px;
    border-radius:12px;
    font-size:0.75rem;
    font-weight:600;
    text-transform:uppercase;
    letter-spacing:0.3px;
  }
  .badge-success{background:#d1fae5;color:#065f46;border:1px solid #a7f3d0}
  .badge-warning{background:#fef3c7;color:#92400e;border:1px solid #fde68a}
  .badge-info{background:#dbeafe;color:#1e40af;border:1px solid #bfdbfe}
  .alert{
    padding:16px 20px;
    border-radius:12px;
    margin-bottom:20px;
    display:flex;
    align-items:flex-start;
    gap:12px;
  }
  .alert-success{background:#ecfdf5;border:2px solid #a7f3d0;color:#065f46}
  .alert-error{background:#fef2f2;border:2px solid #fecaca;color:#991b1b}
  .alert-icon{font-size:1.5rem;flex-shrink:0}
  .verify-form{
    background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);
    padding:32px;
    border-radius:16px;
    color:#fff;
  }
  .verify-form h2{color:#fff;margin-bottom:8px}
  .verify-form .muted{color:rgba(255,255,255,0.8)}
  .verify-form input{
    background:#fff;
    border:none;
  }
  .empty-state{
    text-align:center;
    padding:48px 20px;
    color:var(--muted);
  }
  .empty-state-icon{
    font-size:4rem;
    margin-bottom:16px;
    opacity:0.3;
  }
  .table-wrapper{
    overflow:auto;
    border-radius:12px;
    border:1px solid var(--line);
  }
  @media(max-width:768px){
    .form-grid{grid-template-columns:1fr}
    .stats-grid{grid-template-columns:1fr}
  }
</style>
</head>
<body>
<header>
  <h1>üöö BD Inbound ‚Ä¢ Delivery Verification</h1>
  <nav><a href="/app/">‚Üê Admin Home</a></nav>
</header>

<div class="wrap">
  <!-- Statistics -->
  <div class="stats-grid">
    <div class="stat-card">
      <div class="stat-number"><?= (int)($stats['ready_count'] ?? 0) ?></div>
      <div class="stat-label">Ready for Delivery</div>
    </div>
    <div class="stat-card">
      <div class="stat-number"><?= (int)($stats['delivered_today'] ?? 0) ?></div>
      <div class="stat-label">Delivered Today</div>
    </div>
  </div>

  <!-- Success/Error Message -->
  <?php if ($msg): ?>
    <div class="alert <?= $ok ? 'alert-success':'alert-error' ?>">
      <div class="alert-icon"><?= $ok ? '‚úì' : '‚ö†' ?></div>
      <div>
        <strong><?= $ok ? 'Success!' : 'Error' ?></strong><br>
        <?= e($msg) ?>
      </div>
    </div>
  <?php endif; ?>

  <!-- Verification Form -->
  <div class="verify-form">
    <h2>Verify Delivery Code</h2>
    <p class="muted" style="margin-bottom:24px">Ask the customer for their 6-digit delivery code and carton ID</p>
    
    <form method="post" autocomplete="off">
      <input type="hidden" name="action" value="verify">
      <div class="form-grid">
        <div class="form-group">
          <label style="color:#fff">Carton ID</label>
          <input type="number" name="carton_id" min="1" placeholder="e.g. 123" required autofocus>
        </div>
        <div class="form-group">
          <label style="color:#fff">6-Digit OTP Code</label>
          <input type="text" name="otp" inputmode="numeric" pattern="\d{6}" maxlength="6" placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" required>
        </div>
      </div>
      <button class="btn btn-success" type="submit">
        <span>‚úì</span>
        <span>Verify & Complete Delivery</span>
      </button>
    </form>
  </div>

  <!-- Ready for Delivery Queue -->
  <div class="card">
    <h2>üì¶ Pending Deliveries</h2>
    <p class="muted" style="margin-bottom:20px">Cartons awaiting OTP verification</p>
    
    <?php if (empty($ready)): ?>
      <div class="empty-state">
        <div class="empty-state-icon">üì≠</div>
        <p><strong>No cartons ready for delivery</strong></p>
        <p class="muted">All deliveries are up to date!</p>
      </div>
    <?php else: ?>
      <div class="table-wrapper">
        <table>
          <thead>
            <tr>
              <th>Carton</th>
              <th>Packing Code</th>
              <th>Order</th>
              <th>OTP Generated</th>
              <th>Amount</th>
              <th>Status</th>
            </tr>
          </thead>
          <tbody>
            <?php foreach ($ready as $r): ?>
              <tr>
                <td>
                  <div class="mono" style="font-weight:700;font-size:1.05rem">#<?= (int)$r['id'] ?></div>
                </td>
                <td class="mono"><?= e($r['packing_code'] ?? '‚Äî') ?></td>
                <td>
                  <a class="mono" href="/customer/order_details.php?order_id=<?= (int)$r['order_id'] ?>" 
                     target="_blank" style="color:var(--primary);text-decoration:none;font-weight:600">
                    <?= e($r['order_code'] ?: '#'.$r['order_id']) ?>
                  </a>
                </td>
                <td class="muted">
                  <?php if (!empty($r['otp_generated_at'])): ?>
                    <?= date('M j, g:i A', strtotime($r['otp_generated_at'])) ?>
                  <?php else: ?>
                    ‚Äî
                  <?php endif; ?>
                </td>
                <td class="mono">
                  <?php 
                    $amount = isset($r['total_due']) ? (float)$r['total_due'] : 
                              (isset($r['bd_total_price']) ? (float)$r['bd_total_price'] : 0);
                  ?>
                  $<?= number_format($amount, 2) ?>
                </td>
                <td>
                  <span class="badge badge-warning">‚è≥ Awaiting OTP</span>
                </td>
              </tr>
            <?php endforeach; ?>
          </tbody>
        </table>
      </div>
    <?php endif; ?>
  </div>

  <!-- Help Section -->
  <div class="card" style="background:#fffbeb;border-color:#fcd34d">
    <h3 style="margin-bottom:12px">üí° How to Use</h3>
    <ol style="padding-left:20px;line-height:2">
      <li><strong>Ask the customer</strong> for their carton ID and 6-digit OTP code</li>
      <li><strong>Enter the details</strong> in the verification form above</li>
      <li><strong>Click Verify</strong> to complete the delivery</li>
      <li>The carton will be marked as <strong>delivered</strong> in the system</li>
    </ol>
    <p class="muted" style="margin-top:16px">
      <strong>Note:</strong> OTP codes are generated when supervisor approves cartons. 
      Customers can view their codes on the order details page.
    </p>
  </div>
</div>

<script>
// Auto-focus on carton ID input after successful verification
<?php if ($ok): ?>
  setTimeout(() => {
    const input = document.querySelector('input[name="carton_id"]');
    if (input) input.focus();
  }, 100);
<?php endif; ?>

// Format OTP input (auto-advance on 6 digits)
document.addEventListener('DOMContentLoaded', function() {
  const otpInput = document.querySelector('input[name="otp"]');
  if (otpInput) {
    otpInput.addEventListener('input', function(e) {
      this.value = this.value.replace(/\D/g, '').substring(0, 6);
    });
  }
});
</script>
</body>
</html>